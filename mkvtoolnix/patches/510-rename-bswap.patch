This patch is for uclibc. It is not needed in entware-3x
diff -Naur a/src/common/ac3.cpp b/src/common/ac3.cpp
--- a/src/common/ac3.cpp	2016-11-29 21:52:28.000000000 +0300
+++ b/src/common/ac3.cpp	2016-12-24 23:52:45.490308911 +0300
@@ -459,7 +459,7 @@
   int frame_size_words  = frame.m_bytes >> 1;
   int frame_size_58     = (frame_size_words >> 1) + (frame_size_words >> 3);
 
-  uint16_t actual_crc   = mtx::bswap_16(mtx::checksum::calculate_as_uint(mtx::checksum::algorithm_e::crc16_ansi, buf + 4, 2 * frame_size_58 - 4));
+  uint16_t actual_crc   = mtx::mbswap_16(mtx::checksum::calculate_as_uint(mtx::checksum::algorithm_e::crc16_ansi, buf + 4, 2 * frame_size_58 - 4));
   unsigned int crc_inv  = pow_poly((CRC16_POLY >> 1), (16 * frame_size_58) - 16, CRC16_POLY);
   actual_crc            = mul_poly(crc_inv, actual_crc, CRC16_POLY);
 
diff -Naur a/src/common/bswap.cpp b/src/common/bswap.cpp
--- a/src/common/bswap.cpp	2016-11-29 21:52:28.000000000 +0300
+++ b/src/common/bswap.cpp	2016-12-24 23:54:05.610228929 +0300
@@ -19,7 +19,7 @@
 namespace mtx {
 
 void
-bswap_buffer(unsigned char const *src,
+mbswap_buffer(unsigned char const *src,
              unsigned char *dst,
              std::size_t num_bytes,
              std::size_t word_length) {
diff -Naur a/src/common/bswap.h b/src/common/bswap.h
--- a/src/common/bswap.h	2016-12-24 21:46:05.845438911 +0300
+++ b/src/common/bswap.h	2016-12-24 23:53:44.460808801 +0300
@@ -20,12 +20,12 @@
 namespace mtx {
 
 inline uint16_t
-bswap_16(uint16_t x) {
+mbswap_16(uint16_t x) {
   return (x >> 8) | (x << 8);
 }
 
 inline uint32_t
-bswap_32(uint32_t x) {
+mbswap_32(uint32_t x) {
   x = ((x <<  8) & 0xff00ff00) | ((x >>  8) & 0x00ff00ff);
   x =  (x >> 16)               |  (x << 16);
 
@@ -33,20 +33,20 @@
 }
 
 inline uint64_t
-bswap_64(uint64_t x) {
+mbswap_64(uint64_t x) {
   union {
     uint64_t ll;
     uint32_t l[2];
   } w, r;
 
   w.ll   = x;
-  r.l[0] = bswap_32(w.l[1]);
-  r.l[1] = bswap_32(w.l[0]);
+  r.l[0] = mbswap_32(w.l[1]);
+  r.l[1] = mbswap_32(w.l[0]);
 
   return r.ll;
 }
 
-void bswap_buffer(unsigned char const *src, unsigned char *dst, std::size_t num_bytes, std::size_t word_length);
+void mbswap_buffer(unsigned char const *src, unsigned char *dst, std::size_t num_bytes, std::size_t word_length);
 
 }
 
diff -Naur a/src/common/checksums/crc.cpp b/src/common/checksums/crc.cpp
--- a/src/common/checksums/crc.cpp	2016-11-29 21:52:28.000000000 +0300
+++ b/src/common/checksums/crc.cpp	2016-12-24 23:52:45.570268910 +0300
@@ -70,7 +70,7 @@
       uint32_t c = i << 24;
       for (auto j = 0u; j < 8u; j++)
         c = (c << 1) ^ ((parameters.poly << (32 - parameters.bits)) & (static_cast<int32_t>(c) >> 31));
-      m_table[i] = mtx::bswap_32(c);
+      m_table[i] = mtx::mbswap_32(c);
     }
   }
 
@@ -86,8 +86,8 @@
   auto result        = m_crc ^ m_xor_result;
 
   if (m_result_in_le)
-    result = result_length == 4 ? mtx::bswap_32(result)
-           : result_length == 2 ? mtx::bswap_16(result)
+    result = result_length == 4 ? mtx::mbswap_32(result)
+           : result_length == 2 ? mtx::mbswap_16(result)
            :                      result;
 
   unsigned char buffer[result_length];
diff -Naur a/src/common/dts_parser.cpp b/src/common/dts_parser.cpp
--- a/src/common/dts_parser.cpp	2016-11-29 21:52:28.000000000 +0300
+++ b/src/common/dts_parser.cpp	2016-12-24 23:52:45.462322911 +0300
@@ -120,7 +120,7 @@
 parser_c::decode_buffer() {
   if (m->swap_bytes)
     decode_step(m->swap_remainder, 2, [this]() {
-      mtx::bswap_buffer(m->decode_buffer.get_buffer(), m->decode_buffer.get_buffer(), m->decode_buffer.get_size(), 2);
+      mtx::mbswap_buffer(m->decode_buffer.get_buffer(), m->decode_buffer.get_buffer(), m->decode_buffer.get_size(), 2);
     });
 
   if (m->pack_14_16)
diff -Naur a/src/common/fourcc.cpp b/src/common/fourcc.cpp
--- a/src/common/fourcc.cpp	2016-11-29 21:52:28.000000000 +0300
+++ b/src/common/fourcc.cpp	2016-12-24 23:52:45.494306911 +0300
@@ -21,7 +21,7 @@
 static uint32_t
 val(uint32_t value,
     fourcc_c::byte_order_t byte_order) {
-  return fourcc_c::big_endian == byte_order ? value : mtx::bswap_32(value);
+  return fourcc_c::big_endian == byte_order ? value : mtx::mbswap_32(value);
 }
 
 fourcc_c::fourcc_c()
diff -Naur a/src/extract/xtr_wav.cpp b/src/extract/xtr_wav.cpp
--- a/src/extract/xtr_wav.cpp	2016-11-29 21:52:28.000000000 +0300
+++ b/src/extract/xtr_wav.cpp	2016-12-24 23:52:45.338384911 +0300
@@ -66,7 +66,7 @@
 
   if (m_codec_id == MKV_A_PCM_BE)
     m_byte_swapper = [bps](unsigned char const *src, unsigned char *dst, std::size_t num_bytes) {
-      mtx::bswap_buffer(src, dst, num_bytes, bps / 8);
+      mtx::mbswap_buffer(src, dst, num_bytes, bps / 8);
     };
 }
 
diff -Naur a/src/input/r_mpeg_ts.cpp b/src/input/r_mpeg_ts.cpp
--- a/src/input/r_mpeg_ts.cpp	2016-11-29 21:52:28.000000000 +0300
+++ b/src/input/r_mpeg_ts.cpp	2016-12-24 23:52:45.162472911 +0300
@@ -966,7 +966,7 @@
 mpeg_ts_reader_c::calculate_crc(void const *buffer,
                                 size_t size)
   const {
-  return mtx::bswap_32(mtx::checksum::calculate_as_uint(mtx::checksum::algorithm_e::crc32_ieee, buffer, size, 0xffffffff));
+  return mtx::mbswap_32(mtx::checksum::calculate_as_uint(mtx::checksum::algorithm_e::crc32_ieee, buffer, size, 0xffffffff));
 }
 
 void
diff -Naur a/src/input/r_wav.cpp b/src/input/r_wav.cpp
--- a/src/input/r_wav.cpp	2016-11-29 21:52:28.000000000 +0300
+++ b/src/input/r_wav.cpp	2016-12-24 23:52:45.182462911 +0300
@@ -218,7 +218,7 @@
 int
 wav_ac3acm_demuxer_c::decode_buffer(int len) {
   if ((2 < len) && m_swap_bytes) {
-    mtx::bswap_buffer(m_buf[m_cur_buf]->get_buffer(), m_buf[m_cur_buf ^ 1]->get_buffer(), len, 2);
+    mtx::mbswap_buffer(m_buf[m_cur_buf]->get_buffer(), m_buf[m_cur_buf ^ 1]->get_buffer(), len, 2);
     m_cur_buf ^= 1;
   }
 
@@ -291,7 +291,7 @@
 
   if (m_swap_bytes) {
     memcpy(           m_buf[m_cur_buf ^ 1]->get_buffer(), m_buf[m_cur_buf]->get_buffer(),         8);
-    mtx::bswap_buffer(m_buf[m_cur_buf]->get_buffer() + 8, m_buf[m_cur_buf ^ 1]->get_buffer() + 8, len - 8, 2);
+    mtx::mbswap_buffer(m_buf[m_cur_buf]->get_buffer() + 8, m_buf[m_cur_buf ^ 1]->get_buffer() + 8, len - 8, 2);
     m_cur_buf ^= 1;
   }
 
diff -Naur a/src/output/p_pcm.cpp b/src/output/p_pcm.cpp
--- a/src/output/p_pcm.cpp	2016-11-29 21:52:28.000000000 +0300
+++ b/src/output/p_pcm.cpp	2016-12-24 23:52:45.362372911 +0300
@@ -60,7 +60,7 @@
 
   if (m_format == big_endian_integer)
     m_byte_swapper = [this](unsigned char const *src, unsigned char *dst, std::size_t num_bytes) {
-      mtx::bswap_buffer(src, dst, num_bytes, m_bits_per_sample / 8);
+      mtx::mbswap_buffer(src, dst, num_bytes, m_bits_per_sample / 8);
     };
 }
 
